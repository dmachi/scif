
  build_docs:
    machine:
      image: circleci/classic:201711-01
    working_directory: /home/circleci/out/docs
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/docker.tar.gz ]; then
              sudo apt update && sudo apt -y install pigz
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
              docker images
            fi
      - run:
          name: Build MRIQC documentation
          no_output_timeout: 2h
          command: |
            docker run -ti --rm=false -v /home/circleci/out/docs:/scratch/docs \
              -w /usr/local/src/mriqc/docs \
              --entrypoint=sphinx-build poldracklab/mriqc:latest \
              -T -E -W -D language=en -b html source/ /scratch/docs 2>&1 \
              | tee $PWD/builddocs.log
            cat $PWD/builddocs.log
            grep -qv "ERROR" $PWD/builddocs.log
      - store_artifacts:
          path: /home/circleci/out/docs

  T1w:
    machine:
      image: circleci/classic:201711-01
    environment:
      - TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      - TEST_DATA_NAME: "circle-tests"
    working_directory: /tmp/t1w
    steps:
      - attach_workspace:
          at: /tmp

      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            pip install docker-compose
            docker info
            set +o pipefail
            sudo apt update && sudo apt -y install pigz
            if [ -f /tmp/cache/docker.tar.gz ]; then
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
            fi
            if [ -f /tmp/cache/webapi.tar.gz ]; then
              pigz -d --stdout /tmp/cache/webapi.tar.gz | docker load
            fi
            docker images
      - run:
          name: Start MRIQC WebAPI endpoint
          command: |
            docker-compose -f /tmp/src/mriqcwebapi/dockereve-master/docker-compose.yml --verbose up -d
          background: true

      - run:
          name: Run participant-level on T1w images
          no_output_timeout: 2h
          command: |
            mkdir -p /tmp/t1w/work /tmp/t1w/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/t1w/derivatives
            sudo setfacl -m group:$(id -gn):rwx /tmp/t1w/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/t1w/work
            sudo setfacl -m group:$(id -gn):rwx /tmp/t1w/work
            # Run MRIQC
            docker run --rm=false -ti -v /tmp/data/${TEST_DATA_NAME}:/data:ro \
                       -v $PWD:/scratch -w /scratch \
                       poldracklab/mriqc:latest \
                       /data derivatives/ participant \
                       -vv --verbose-reports --profile -m T1w \
                       --n_procs 2 --ants-nthreads 1 --ants-float \
                       --webapi-url http://$( hostname -I | awk '{print $1}' )/api/v1 --upload-strict
      - run:
          name: Run group-level on T1w images
          no_output_timeout: 2h
          command: |
            docker run --rm=false -ti -v /tmp/data/${TEST_DATA_NAME}:/data:ro \
                       -v $PWD:/scratch -w /scratch \
                       poldracklab/mriqc:latest \
                       /data derivatives/ group \
                       -m T1w -vv

      - run:
          name: Checking presence of outputs
          command: |
            mkdir -p /tmp/t1w/test
            find /tmp/t1w/derivatives | sed s+/tmp/t1w/derivatives/++ | sort > /tmp/t1w/test/outputs.out
            diff /tmp/src/mriqc/.circleci/circle_T1w.txt /tmp/t1w/test/outputs.out
            exit $?

      - run:
          name: Checking changes on MD5 sums of intermediate files of MRIQC
          command: |
            mkdir -p /tmp/t1w/test
            export HASHCMD="docker run --rm=false -i -v $PWD:/scratch -w /scratch \
                                       --entrypoint=/usr/local/miniconda/bin/nib-hash \
                                       poldracklab/mriqc:latest"
            find /tmp/t1w/work -name "*.nii.gz" -type f  | sed s+/tmp/t1w/++ | sort | xargs -n1 $HASHCMD >> /tmp/t1w/test/nii_outputs.txt
            diff /tmp/src/mriqc/.circleci/nii_T1w.txt /tmp/t1w/test/nii_outputs.txt
            exit $?

      - run:
          name: Checking changes on IQMs
          command: |
            docker run --rm=false -ti -v $PWD:/scratch -w /scratch \
              --entrypoint="dfcheck" poldracklab/mriqc:latest \
              -i /scratch/derivatives/T1w.csv \
              -r /usr/local/src/mriqc/mriqc/data/testdata/T1w.csv

      - run:
          name: WebAPI - Check records
          command: |
            docker run --rm=false -ti \
              --entrypoint="/usr/local/miniconda/bin/mriqcwebapi_test" \
              poldracklab/mriqc:latest \
              T1w 4 \
              --webapi-url http://$( hostname -I | awk '{print $1}' )/api/v1/T1w

      - run:
          name: Test classifier
          command: |
            docker run --rm=false -ti -v $PWD:/scratch -w /scratch \
                       --entrypoint=mriqc_clf poldracklab/mriqc:latest \
                       --train --test -P /usr/local/miniconda/lib/python3.6/site-packages/mriqc/data/mclf_run-20170724-191452_mod-rfc_ver-0.9.7-rc8_class-2_cv-loso_data-all_settings.yml -v
            # Run the classifier on the test data
            docker run --rm=false -ti -v $PWD:/scratch -w /scratch \
                       --entrypoint=mriqc_clf poldracklab/mriqc:latest \
                       --load-classifier $( basename `ls mclf_run-*_class-2_cv-loso_data-all_estimator.pklz` ) -X /scratch/derivatives/T1w.csv -v
      - store_artifacts:
          path: /tmp/t1w/derivatives

      - store_artifacts:
          path: /tmp/t1w/test

  bold:
    machine:
      image: circleci/classic:201711-01
    environment:
      - TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      - TEST_DATA_NAME: "circle-tests"
    working_directory: /tmp/bold
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            pip install docker-compose
            set +o pipefail
            sudo apt update && sudo apt -y install pigz
            if [ -f /tmp/cache/docker.tar.gz ]; then
              pigz -d --stdout /tmp/cache/docker.tar.gz | docker load
            fi
            if [ -f /tmp/cache/webapi.tar.gz ]; then
              pigz -d --stdout /tmp/cache/webapi.tar.gz | docker load
            fi
            docker images
      - run:
          name: Start MRIQC WebAPI endpoint
          command: |
            docker-compose -f /tmp/src/mriqcwebapi/dockereve-master/docker-compose.yml --verbose up -d
          background: true

      - run:
          name: Run participant-level on BOLD images
          no_output_timeout: 2h
          command: |
            mkdir -p /tmp/bold/work /tmp/bold/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/bold/derivatives
            sudo setfacl -m group:$(id -gn):rwx /tmp/bold/derivatives
            sudo setfacl -d -m group:$(id -gn):rwx /tmp/bold/work
            sudo setfacl -m group:$(id -gn):rwx /tmp/bold/work
            # Run MRIQC
            docker run --rm=false -ti -v /tmp/data/${TEST_DATA_NAME}:/data:ro \
                       -v $PWD:/scratch -w /scratch \
                       poldracklab/mriqc:latest \
                       /data derivatives/ participant \
                       -vv --verbose-reports --profile -m bold \
                       --n_procs 2 --ants-nthreads 1 --ants-float \
                       --testing --ica \
                       --webapi-url http://$( hostname -I | awk '{print $1}' )/api/v1 --upload-strict

      - run:
          name: Run group-level on BOLD images
          no_output_timeout: 2h
          command: |
            docker run --rm=false -ti -v /tmp/data/${TEST_DATA_NAME}:/data:ro \
                       -v $PWD:/scratch -w /scratch \
                       poldracklab/mriqc:latest \
                       /data derivatives/ group \
                       -m bold -vv

      - run:
          name: Checking presence of outputs
          command: |
            mkdir -p /tmp/bold/test
            find /tmp/bold/derivatives | sed s+/tmp/bold/derivatives/++ | sort > /tmp/bold/test/outputs.out
            diff /tmp/src/mriqc/.circleci/circle_bold.txt /tmp/bold/test/outputs.out
            exit $?

      - run:
          name: Checking changes on MD5 sums of intermediate files of MRIQC
          command: |
            mkdir -p /tmp/bold/test
            export HASHCMD="docker run --rm=false -i -v $PWD:/scratch -w /scratch \
                                       --entrypoint=/usr/local/miniconda/bin/nib-hash \
                                       poldracklab/mriqc:latest"
            find /tmp/bold/work -name "*.nii.gz" -type f  | sed s+/tmp/bold/++ | sort | xargs -n1 $HASHCMD >> /tmp/bold/test/nii_outputs.txt
            diff /tmp/src/mriqc/.circleci/nii_bold.txt /tmp/bold/test/nii_outputs.txt
            exit $?

      - run:
          name: Checking changes on IQMs
          command: |
            docker run --rm=false -ti -v $PWD:/scratch -w /scratch \
              --entrypoint="dfcheck" poldracklab/mriqc:latest \
              -i /scratch/derivatives/bold.csv \
              -r /usr/local/src/mriqc/mriqc/data/testdata/bold.csv

      - run:
          name: WebAPI - Check records
          command: |
            docker run --rm=false -ti \
              --entrypoint="/usr/local/miniconda/bin/mriqcwebapi_test" \
              poldracklab/mriqc:latest \
              bold 9 \
              --webapi-url http://$( hostname -I | awk '{print $1}' )/api/v1/bold

      - store_artifacts:
          path: /tmp/bold/derivatives

      - store_artifacts:
          path: /tmp/bold/test

