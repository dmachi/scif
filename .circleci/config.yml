version: 2.1

orbs:
  # https://circleci.com/orbs/registry/orb/circleci/docker-publish
  docker-publish: circleci/docker-publish@0.1.3

jobs:

  build:
    environment:
      - TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      - CONTAINER_NAME: "vanessa/scif"
    docker:
      - image: docker:18.06.3-ce-git
    working_directory: /tmp/src/scif
    steps:
      - run:
          name: Install parallel gzip and python3
          command: apk add --no-cache pigz python3
      - restore_cache:
          keys:
            - docker-v1-{{ .Branch }}-{{ epoch }}
            - docker-v1-{{ .Branch }}-
            - docker-v1-master-
            - docker-v1-
          paths:
            - /tmp/cache/container.tar.gz

      - checkout
      - setup_remote_docker
      - run:
          name: Load Docker image layer cache
          no_output_timeout: 30m
          command: |
            docker info
            set +o pipefail
            if [ -f /tmp/cache/container.tar.gz ]; then
              pigz -d --stdout /tmp/cache/container.tar.gz | docker load
            fi
            docker images
      - run:
          name: Build Docker images
          no_output_timeout: 60m
          command: |
            # Build docker image
            e=1 && for i in {1..5}; do
              docker build \
                --cache-from=${CONTAINER_NAME}:hw \
                --rm=false \
                -f /tmp/src/scif/Dockerfile.hello-world \
                -t ${CONTAINER_NAME} \
                --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
                --build-arg VCS_REF=`git rev-parse --short HEAD` \
                --build-arg VERSION="${CIRCLE_TAG:-$THISVERSION}" . \
              && e=0 && break || sleep 15
            done && [ "$e" -eq "0" ]
      - run:
          name: Docker save
          no_output_timeout: 40m
          command: |
            echo "Saving ${CONTAINER_NAME} to container.tar.gz"
            mkdir -p /tmp/cache
            docker save ${CONTAINER_NAME} \
              | pigz -2 -p 3 > /tmp/cache/container.tar.gz
      - save_cache:
         key: docker-v1-{{ .Branch }}-{{ epoch }}
         paths:
            - /tmp/cache/container.tar.gz
      - run:
          name: List SCIF Apps
          no_output_timeout: 2h
          command: |
            ls /tmp
            echo "The applications installed in this container are:"
            docker run -it --rm=false \
              ${CONTAINER_NAME} apps
      - run:
          name: Show SCIF Help
          no_output_timeout: 2h
          command: |
            ls $PWD
            echo "Testing SCIF Client Help"
            chmod u+x scif/tests/test_help.sh
            /bin/bash scif/tests/test_help.sh ${CONTAINER_NAME}
      - run:
          name: Test SCIF Client Run
          no_output_timeout: 2h
          command: |
            ls /tmp
            echo "Testing SCIF Client Run:"
            chmod u+x scif/tests/test_run.sh
            /bin/bash scif/tests/test_run.sh ${CONTAINER_NAME}
      - run:
          name: Test SCIF Client Exec
          no_output_timeout: 2h
          command: |
            echo "Testing SCIF Client Exec:"
            chmod u+x scif/tests/test_exec.sh
            /bin/bash scif/tests/test_exec.sh ${CONTAINER_NAME}
      - run:
          name: Test SCIF Client Test
          no_output_timeout: 2h
          command: |
            echo "Testing SCIF Client Test:"
            chmod u+x scif/tests/test_tests.sh
            /bin/bash scif/tests/test_tests.sh ${CONTAINER_NAME}
      - store_test_results:
          path: /home/circleci/out/tests


  test_python:
    docker:
      - image: circleci/python:3.6.1
      
    working_directory: ~/scif

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python3 setup.py install

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies
        
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py test

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - store_test_results:
          path: /home/circleci/out/tests


workflows:
  build_and_test:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - update_cache:
          requires:
            - build
          filters:
            branches:
              ignore: /docs?\/.*/
            tags:
              only: /.*/

      - test_python:
          filters:
            tags:
              only: /.*/

  build_without_publishing_job:
    jobs:
      - docker-publish/publish:
          image: vanessa/scif
          deploy: false
          tag: latest
          filters:
            branches:
              ignore: 
                - master
                - docs*
          after_build:
            - run:
                name: Preview Docker Tag for Build
                command: |
                   DOCKER_TAG=$(docker run vanessa/scif:latest version)
                   echo "Version for Docker tag is ${DOCKER_TAG}"

      - docker-publish/publish:
          image: vanessa/scif
          tag: hw
          deploy: false
          dockerfile: Dockerfile.hello-world
          filters:
            branches:
              ignore: 
                - master
                - docs*

  # This workflow will deploy images on merge to master only
  docker_with_lifecycle:
    jobs:
      - docker-publish/publish:
          image: vanessa/scif
          tag: latest
          filters:
            branches:
             only: master
          after_build:
            - run:
                name: Publish Docker Tag with SIF Python Version
                command: |
                   DOCKER_TAG=$(docker run vanessa/scif:latest version)
                   echo "Version for Docker tag is ${DOCKER_TAG}"
                   docker tag singularityhub/sif:latest singularityhub/sif:${DOCKER_TAG}

      - docker-publish/publish:
          image: vanessa/scif
          tag: hw
          dockerfile: Dockerfile.hello-world
          filters:
            branches:
             only: master
